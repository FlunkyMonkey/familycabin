{"ast":null,"code":"import React,{createContext,useContext,useState,useMemo}from'react';import{createTheme,ThemeProvider as MuiThemeProvider}from'@mui/material/styles';// Create the theme context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();// Custom hook to use the theme context\nexport const useTheme=()=>useContext(ThemeContext);export const ThemeProvider=_ref=>{let{children}=_ref;const[mode,setMode]=useState('light');// Define our nature-inspired theme\nconst theme=useMemo(()=>createTheme({palette:{mode,primary:{main:'#5D4037',// Brown - representing wood/cabin\nlight:'#8B6B61',dark:'#321911',contrastText:'#FFFFFF'},secondary:{main:'#2E7D32',// Green - representing forest/nature\nlight:'#60AD5E',dark:'#005005',contrastText:'#FFFFFF'},background:{default:mode==='light'?'#F5F5F5':'#121212',paper:mode==='light'?'#FFFFFF':'#1E1E1E'},text:{primary:mode==='light'?'#212121':'#FFFFFF',secondary:mode==='light'?'#757575':'#AAAAAA'},error:{main:'#D32F2F'},warning:{main:'#FFA000'},info:{main:'#1976D2'},success:{main:'#388E3C'}},typography:{fontFamily:'\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',h1:{fontWeight:500},h2:{fontWeight:500},h3:{fontWeight:500},h4:{fontWeight:500},h5:{fontWeight:500},h6:{fontWeight:500}},shape:{borderRadius:8// Smooth, rounded corners\n},components:{MuiButton:{styleOverrides:{root:{borderRadius:25,// Rounded buttons\ntextTransform:'none'}}},MuiCard:{styleOverrides:{root:{borderRadius:16,// Rounded cards\nboxShadow:mode==='light'?'0px 4px 12px rgba(0, 0, 0, 0.05)':'0px 4px 12px rgba(0, 0, 0, 0.2)'}}},MuiPaper:{styleOverrides:{root:{borderRadius:12// Rounded papers\n}}},MuiAppBar:{styleOverrides:{root:{boxShadow:'none'}}}}}),[mode]);// Toggle between light and dark mode\nconst toggleColorMode=()=>{setMode(prevMode=>prevMode==='light'?'dark':'light');};const value={mode,toggleColorMode};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:value,children:/*#__PURE__*/_jsx(MuiThemeProvider,{theme:theme,children:children})});};","map":{"version":3,"names":["React","createContext","useContext","useState","useMemo","createTheme","ThemeProvider","MuiThemeProvider","jsx","_jsx","ThemeContext","useTheme","_ref","children","mode","setMode","theme","palette","primary","main","light","dark","contrastText","secondary","background","default","paper","text","error","warning","info","success","typography","fontFamily","h1","fontWeight","h2","h3","h4","h5","h6","shape","borderRadius","components","MuiButton","styleOverrides","root","textTransform","MuiCard","boxShadow","MuiPaper","MuiAppBar","toggleColorMode","prevMode","value","Provider"],"sources":["/Users/mikeb/familycabin/client/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useMemo } from 'react';\nimport { createTheme, ThemeProvider as MuiThemeProvider } from '@mui/material/styles';\n\n// Create the theme context\nconst ThemeContext = createContext();\n\n// Custom hook to use the theme context\nexport const useTheme = () => useContext(ThemeContext);\n\nexport const ThemeProvider = ({ children }) => {\n  const [mode, setMode] = useState('light');\n\n  // Define our nature-inspired theme\n  const theme = useMemo(() => createTheme({\n    palette: {\n      mode,\n      primary: {\n        main: '#5D4037', // Brown - representing wood/cabin\n        light: '#8B6B61',\n        dark: '#321911',\n        contrastText: '#FFFFFF',\n      },\n      secondary: {\n        main: '#2E7D32', // Green - representing forest/nature\n        light: '#60AD5E',\n        dark: '#005005',\n        contrastText: '#FFFFFF',\n      },\n      background: {\n        default: mode === 'light' ? '#F5F5F5' : '#121212',\n        paper: mode === 'light' ? '#FFFFFF' : '#1E1E1E',\n      },\n      text: {\n        primary: mode === 'light' ? '#212121' : '#FFFFFF',\n        secondary: mode === 'light' ? '#757575' : '#AAAAAA',\n      },\n      error: {\n        main: '#D32F2F',\n      },\n      warning: {\n        main: '#FFA000',\n      },\n      info: {\n        main: '#1976D2',\n      },\n      success: {\n        main: '#388E3C',\n      },\n    },\n    typography: {\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      h1: {\n        fontWeight: 500,\n      },\n      h2: {\n        fontWeight: 500,\n      },\n      h3: {\n        fontWeight: 500,\n      },\n      h4: {\n        fontWeight: 500,\n      },\n      h5: {\n        fontWeight: 500,\n      },\n      h6: {\n        fontWeight: 500,\n      },\n    },\n    shape: {\n      borderRadius: 8, // Smooth, rounded corners\n    },\n    components: {\n      MuiButton: {\n        styleOverrides: {\n          root: {\n            borderRadius: 25, // Rounded buttons\n            textTransform: 'none',\n          },\n        },\n      },\n      MuiCard: {\n        styleOverrides: {\n          root: {\n            borderRadius: 16, // Rounded cards\n            boxShadow: mode === 'light' \n              ? '0px 4px 12px rgba(0, 0, 0, 0.05)' \n              : '0px 4px 12px rgba(0, 0, 0, 0.2)',\n          },\n        },\n      },\n      MuiPaper: {\n        styleOverrides: {\n          root: {\n            borderRadius: 12, // Rounded papers\n          },\n        },\n      },\n      MuiAppBar: {\n        styleOverrides: {\n          root: {\n            boxShadow: 'none',\n          },\n        },\n      },\n    },\n  }), [mode]);\n\n  // Toggle between light and dark mode\n  const toggleColorMode = () => {\n    setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'));\n  };\n\n  const value = {\n    mode,\n    toggleColorMode,\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      <MuiThemeProvider theme={theme}>\n        {children}\n      </MuiThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,OAAO,KAAQ,OAAO,CAC3E,OAASC,WAAW,CAAEC,aAAa,GAAI,CAAAC,gBAAgB,KAAQ,sBAAsB,CAErF;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,YAAY,cAAGT,aAAa,CAAC,CAAC,CAEpC;AACA,MAAO,MAAM,CAAAU,QAAQ,CAAGA,CAAA,GAAMT,UAAU,CAACQ,YAAY,CAAC,CAEtD,MAAO,MAAM,CAAAJ,aAAa,CAAGM,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,OAAO,CAAC,CAEzC;AACA,KAAM,CAAAa,KAAK,CAAGZ,OAAO,CAAC,IAAMC,WAAW,CAAC,CACtCY,OAAO,CAAE,CACPH,IAAI,CACJI,OAAO,CAAE,CACPC,IAAI,CAAE,SAAS,CAAE;AACjBC,KAAK,CAAE,SAAS,CAChBC,IAAI,CAAE,SAAS,CACfC,YAAY,CAAE,SAChB,CAAC,CACDC,SAAS,CAAE,CACTJ,IAAI,CAAE,SAAS,CAAE;AACjBC,KAAK,CAAE,SAAS,CAChBC,IAAI,CAAE,SAAS,CACfC,YAAY,CAAE,SAChB,CAAC,CACDE,UAAU,CAAE,CACVC,OAAO,CAAEX,IAAI,GAAK,OAAO,CAAG,SAAS,CAAG,SAAS,CACjDY,KAAK,CAAEZ,IAAI,GAAK,OAAO,CAAG,SAAS,CAAG,SACxC,CAAC,CACDa,IAAI,CAAE,CACJT,OAAO,CAAEJ,IAAI,GAAK,OAAO,CAAG,SAAS,CAAG,SAAS,CACjDS,SAAS,CAAET,IAAI,GAAK,OAAO,CAAG,SAAS,CAAG,SAC5C,CAAC,CACDc,KAAK,CAAE,CACLT,IAAI,CAAE,SACR,CAAC,CACDU,OAAO,CAAE,CACPV,IAAI,CAAE,SACR,CAAC,CACDW,IAAI,CAAE,CACJX,IAAI,CAAE,SACR,CAAC,CACDY,OAAO,CAAE,CACPZ,IAAI,CAAE,SACR,CACF,CAAC,CACDa,UAAU,CAAE,CACVC,UAAU,CAAE,4CAA4C,CACxDC,EAAE,CAAE,CACFC,UAAU,CAAE,GACd,CAAC,CACDC,EAAE,CAAE,CACFD,UAAU,CAAE,GACd,CAAC,CACDE,EAAE,CAAE,CACFF,UAAU,CAAE,GACd,CAAC,CACDG,EAAE,CAAE,CACFH,UAAU,CAAE,GACd,CAAC,CACDI,EAAE,CAAE,CACFJ,UAAU,CAAE,GACd,CAAC,CACDK,EAAE,CAAE,CACFL,UAAU,CAAE,GACd,CACF,CAAC,CACDM,KAAK,CAAE,CACLC,YAAY,CAAE,CAAG;AACnB,CAAC,CACDC,UAAU,CAAE,CACVC,SAAS,CAAE,CACTC,cAAc,CAAE,CACdC,IAAI,CAAE,CACJJ,YAAY,CAAE,EAAE,CAAE;AAClBK,aAAa,CAAE,MACjB,CACF,CACF,CAAC,CACDC,OAAO,CAAE,CACPH,cAAc,CAAE,CACdC,IAAI,CAAE,CACJJ,YAAY,CAAE,EAAE,CAAE;AAClBO,SAAS,CAAEnC,IAAI,GAAK,OAAO,CACvB,kCAAkC,CAClC,iCACN,CACF,CACF,CAAC,CACDoC,QAAQ,CAAE,CACRL,cAAc,CAAE,CACdC,IAAI,CAAE,CACJJ,YAAY,CAAE,EAAI;AACpB,CACF,CACF,CAAC,CACDS,SAAS,CAAE,CACTN,cAAc,CAAE,CACdC,IAAI,CAAE,CACJG,SAAS,CAAE,MACb,CACF,CACF,CACF,CACF,CAAC,CAAC,CAAE,CAACnC,IAAI,CAAC,CAAC,CAEX;AACA,KAAM,CAAAsC,eAAe,CAAGA,CAAA,GAAM,CAC5BrC,OAAO,CAAEsC,QAAQ,EAAMA,QAAQ,GAAK,OAAO,CAAG,MAAM,CAAG,OAAQ,CAAC,CAClE,CAAC,CAED,KAAM,CAAAC,KAAK,CAAG,CACZxC,IAAI,CACJsC,eACF,CAAC,CAED,mBACE3C,IAAA,CAACC,YAAY,CAAC6C,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAzC,QAAA,cAClCJ,IAAA,CAACF,gBAAgB,EAACS,KAAK,CAAEA,KAAM,CAAAH,QAAA,CAC5BA,QAAQ,CACO,CAAC,CACE,CAAC,CAE5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}